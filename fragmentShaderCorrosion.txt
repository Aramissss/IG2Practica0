#version 330 core
in vec3 FragPos;
in vec3 Normal;
in vec2 TexCoords;
in vec2 vUv0; 
uniform sampler2D textura1;
uniform vec3 viewPos;
uniform vec3 light_position;
uniform vec3 light_diffuse_colour;
out vec4 fFragColor; 
void main() { 
	// diffuse
	vec3 norm = normalize(Normal);
	vec3 lightDir = normalize(light_position - FragPos);
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse= light_diffuse_colour * diff * texture(textura1, TexCoords).rgb;
	
	if(gl_FrontFacing && diffuse.r >=0.5){
		discard;
	}
	fFragColor = vec4(diffuse, 1.0);
}
/*
uniform sampler2D textura1;
in vec2 vUv0; 
out vec4 fFragColor; 
void main() {
	vec3 color1 = vec3(texture(textura1, vUv0));
	if(gl_FrontFacing && color1.r >=0.5){
		discard;
	}
	fFragColor = vec4(color1, 1.0);
}*/